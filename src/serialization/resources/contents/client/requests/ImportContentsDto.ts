/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Squidex from "../../../../../api";
import * as core from "../../../../../core";

export const ImportContentsDto: core.serialization.Schema<
    serializers.ImportContentsDto.Raw,
    Squidex.ImportContentsDto
> = core.serialization.object({
    datas: core.serialization.list(core.serialization.lazy(async () => (await import("../../../..")).ContentData)),
    publish: core.serialization.boolean().optional(),
    doNotScript: core.serialization.boolean().optional(),
    optimizeValidation: core.serialization.boolean().optional(),
});

export declare namespace ImportContentsDto {
    interface Raw {
        datas: serializers.ContentData.Raw[];
        publish?: boolean | null;
        doNotScript?: boolean | null;
        optimizeValidation?: boolean | null;
    }
}
