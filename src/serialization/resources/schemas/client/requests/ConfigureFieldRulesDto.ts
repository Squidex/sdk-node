/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Squidex from "../../../../../api";
import * as core from "../../../../../core";

export const ConfigureFieldRulesDto: core.serialization.Schema<
    serializers.ConfigureFieldRulesDto.Raw,
    Squidex.ConfigureFieldRulesDto
> = core.serialization.object({
    fieldRules: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("../../../..")).FieldRuleDto))
        .optional(),
});

export declare namespace ConfigureFieldRulesDto {
    interface Raw {
        fieldRules?: serializers.FieldRuleDto.Raw[] | null;
    }
}
