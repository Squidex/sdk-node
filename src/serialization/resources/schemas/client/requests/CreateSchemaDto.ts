/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../..";
import * as Squidex from "../../../../../api";
import * as core from "../../../../../core";

export const CreateSchemaDto: core.serialization.Schema<serializers.CreateSchemaDto.Raw, Squidex.CreateSchemaDto> =
    core.serialization.object({
        name: core.serialization.string().optional(),
        type: core.serialization.lazy(async () => (await import("../../../..")).SchemaType).optional(),
        isSingleton: core.serialization.boolean().optional(),
    });

export declare namespace CreateSchemaDto {
    interface Raw {
        name?: string | null;
        type?: serializers.SchemaType.Raw | null;
        isSingleton?: boolean | null;
    }
}
