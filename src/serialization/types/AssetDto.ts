/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const AssetDto: core.serialization.ObjectSchema<serializers.AssetDto.Raw, Squidex.AssetDto> =
    core.serialization.object({
        id: core.serialization.string(),
        parentId: core.serialization.string(),
        fileName: core.serialization.string(),
        fileHash: core.serialization.string().optional(),
        isProtected: core.serialization.boolean(),
        slug: core.serialization.string(),
        mimeType: core.serialization.string(),
        fileType: core.serialization.string(),
        metadataText: core.serialization.string(),
        editToken: core.serialization.string().optional(),
        metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
        tags: core.serialization.list(core.serialization.string()).optional(),
        fileSize: core.serialization.number(),
        fileVersion: core.serialization.number(),
        type: core.serialization.lazy(async () => (await import("..")).AssetType),
        createdBy: core.serialization.string(),
        lastModifiedBy: core.serialization.string(),
        created: core.serialization.string(),
        lastModified: core.serialization.string(),
        version: core.serialization.number(),
        meta: core.serialization.property(
            "_meta",
            core.serialization.lazyObject(async () => (await import("..")).AssetMeta).optional()
        ),
        isImage: core.serialization.boolean(),
        pixelWidth: core.serialization.number().optional(),
        pixelHeight: core.serialization.number().optional(),
    });

export declare namespace AssetDto {
    interface Raw {
        id: string;
        parentId: string;
        fileName: string;
        fileHash?: string | null;
        isProtected: boolean;
        slug: string;
        mimeType: string;
        fileType: string;
        metadataText: string;
        editToken?: string | null;
        metadata: Record<string, unknown>;
        tags?: string[] | null;
        fileSize: number;
        fileVersion: number;
        type: serializers.AssetType.Raw;
        createdBy: string;
        lastModifiedBy: string;
        created: string;
        lastModified: string;
        version: number;
        _meta?: serializers.AssetMeta.Raw | null;
        isImage: boolean;
        pixelWidth?: number | null;
        pixelHeight?: number | null;
    }
}
