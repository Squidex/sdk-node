/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const CommentsDto: core.serialization.ObjectSchema<serializers.CommentsDto.Raw, Squidex.CommentsDto> =
    core.serialization.object({
        createdComments: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).CommentDto))
            .optional(),
        updatedComments: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).CommentDto))
            .optional(),
        deletedComments: core.serialization.list(core.serialization.string()).optional(),
        version: core.serialization.number(),
    });

export declare namespace CommentsDto {
    interface Raw {
        createdComments?: serializers.CommentDto.Raw[] | null;
        updatedComments?: serializers.CommentDto.Raw[] | null;
        deletedComments?: string[] | null;
        version: number;
    }
}
