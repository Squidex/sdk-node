/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const WorkflowStepDto: core.serialization.ObjectSchema<
    serializers.WorkflowStepDto.Raw,
    Squidex.WorkflowStepDto
> = core.serialization.object({
    transitions: core.serialization
        .record(
            core.serialization.string(),
            core.serialization.lazyObject(async () => (await import("..")).WorkflowTransitionDto).optional()
        )
        .optional(),
    color: core.serialization.string().optional(),
    validate: core.serialization.boolean().optional(),
    noUpdate: core.serialization.boolean().optional(),
    noUpdateExpression: core.serialization.string().optional(),
    noUpdateRoles: core.serialization.list(core.serialization.string()).optional(),
});

export declare namespace WorkflowStepDto {
    interface Raw {
        transitions?: Record<string, serializers.WorkflowTransitionDto.Raw | null | undefined> | null;
        color?: string | null;
        validate?: boolean | null;
        noUpdate?: boolean | null;
        noUpdateExpression?: string | null;
        noUpdateRoles?: string[] | null;
    }
}
