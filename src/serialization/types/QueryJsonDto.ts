/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const QueryJsonDto: core.serialization.ObjectSchema<serializers.QueryJsonDto.Raw, Squidex.QueryJsonDto> =
    core.serialization.object({
        filter: core.serialization.unknown(),
        fullText: core.serialization.string().optional(),
        skip: core.serialization.number(),
        take: core.serialization.number(),
        random: core.serialization.number(),
        top: core.serialization.number(),
        sort: core.serialization
            .list(core.serialization.lazyObject(async () => (await import("..")).SortNode))
            .optional(),
    });

export declare namespace QueryJsonDto {
    interface Raw {
        filter?: unknown;
        fullText?: string | null;
        skip: number;
        take: number;
        random: number;
        top: number;
        sort?: serializers.SortNode.Raw[] | null;
    }
}
