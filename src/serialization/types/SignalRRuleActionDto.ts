/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const SignalRRuleActionDto: core.serialization.ObjectSchema<
    serializers.SignalRRuleActionDto.Raw,
    Squidex.SignalRRuleActionDto
> = core.serialization.object({
    connectionString: core.serialization.string().optional(),
    hubName: core.serialization.string().optional(),
    action: core.serialization.lazy(async () => (await import("..")).ActionTypeEnum).optional(),
    methodName: core.serialization.string().optional(),
    target: core.serialization.string().optional(),
    payload: core.serialization.string().optional(),
});

export declare namespace SignalRRuleActionDto {
    interface Raw {
        connectionString?: string | null;
        hubName?: string | null;
        action?: serializers.ActionTypeEnum.Raw | null;
        methodName?: string | null;
        target?: string | null;
        payload?: string | null;
    }
}
