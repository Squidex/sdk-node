/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const AppDto: core.serialization.ObjectSchema<serializers.AppDto.Raw, Squidex.AppDto> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        label: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        version: core.serialization.number(),
        created: core.serialization.string(),
        lastModified: core.serialization.string(),
        teamId: core.serialization.string().optional(),
        permissions: core.serialization.list(core.serialization.string()),
        canAccessApi: core.serialization.boolean(),
        canAccessContent: core.serialization.boolean(),
        roleName: core.serialization.string().optional(),
        roleProperties: core.serialization.record(core.serialization.string(), core.serialization.unknown()),
    });

export declare namespace AppDto {
    interface Raw {
        id: string;
        name: string;
        label?: string | null;
        description?: string | null;
        version: number;
        created: string;
        lastModified: string;
        teamId?: string | null;
        permissions: string[];
        canAccessApi: boolean;
        canAccessContent: boolean;
        roleName?: string | null;
        roleProperties: Record<string, unknown>;
    }
}
