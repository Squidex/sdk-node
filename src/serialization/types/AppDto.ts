/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const AppDto: core.serialization.ObjectSchema<serializers.AppDto.Raw, Squidex.AppDto> =
    core.serialization.object({
        id: core.serialization.string().optional(),
        name: core.serialization.string().optional(),
        label: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        version: core.serialization.number().optional(),
        created: core.serialization.string().optional(),
        lastModified: core.serialization.string().optional(),
        teamId: core.serialization.string().optional(),
        permissions: core.serialization.list(core.serialization.string()).optional(),
        canAccessApi: core.serialization.boolean().optional(),
        canAccessContent: core.serialization.boolean().optional(),
        roleName: core.serialization.string().optional(),
        roleProperties: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    });

export declare namespace AppDto {
    interface Raw {
        id?: string | null;
        name?: string | null;
        label?: string | null;
        description?: string | null;
        version?: number | null;
        created?: string | null;
        lastModified?: string | null;
        teamId?: string | null;
        permissions?: string[] | null;
        canAccessApi?: boolean | null;
        canAccessContent?: boolean | null;
        roleName?: string | null;
        roleProperties?: Record<string, unknown> | null;
    }
}
