/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const ContentChangedRuleTriggerDto: core.serialization.ObjectSchema<
    serializers.ContentChangedRuleTriggerDto.Raw,
    Squidex.ContentChangedRuleTriggerDto
> = core.serialization.object({
    schemas: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).SchemaCondition))
        .optional(),
    referencedSchemas: core.serialization
        .list(core.serialization.lazyObject(async () => (await import("..")).SchemaCondition))
        .optional(),
    handleAll: core.serialization.boolean().optional(),
});

export declare namespace ContentChangedRuleTriggerDto {
    interface Raw {
        schemas?: serializers.SchemaCondition.Raw[] | null;
        referencedSchemas?: serializers.SchemaCondition.Raw[] | null;
        handleAll?: boolean | null;
    }
}
