/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const NestedFieldDto: core.serialization.ObjectSchema<serializers.NestedFieldDto.Raw, Squidex.NestedFieldDto> =
    core.serialization.object({
        fieldId: core.serialization.number().optional(),
        name: core.serialization.string().optional(),
        isHidden: core.serialization.boolean().optional(),
        isLocked: core.serialization.boolean().optional(),
        isDisabled: core.serialization.boolean().optional(),
        properties: core.serialization.lazy(async () => (await import("..")).FieldPropertiesDto).optional(),
    });

export declare namespace NestedFieldDto {
    interface Raw {
        fieldId?: number | null;
        name?: string | null;
        isHidden?: boolean | null;
        isLocked?: boolean | null;
        isDisabled?: boolean | null;
        properties?: serializers.FieldPropertiesDto.Raw | null;
    }
}
