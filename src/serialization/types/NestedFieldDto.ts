/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const NestedFieldDto: core.serialization.ObjectSchema<serializers.NestedFieldDto.Raw, Squidex.NestedFieldDto> =
    core.serialization.object({
        fieldId: core.serialization.number(),
        name: core.serialization.string(),
        isHidden: core.serialization.boolean(),
        isLocked: core.serialization.boolean(),
        isDisabled: core.serialization.boolean(),
        properties: core.serialization.lazy(async () => (await import("..")).FieldPropertiesDto),
    });

export declare namespace NestedFieldDto {
    interface Raw {
        fieldId: number;
        name: string;
        isHidden: boolean;
        isLocked: boolean;
        isDisabled: boolean;
        properties: serializers.FieldPropertiesDto.Raw;
    }
}
