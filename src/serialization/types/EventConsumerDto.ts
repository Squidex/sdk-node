/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const EventConsumerDto: core.serialization.ObjectSchema<
    serializers.EventConsumerDto.Raw,
    Squidex.EventConsumerDto
> = core.serialization.object({
    isStopped: core.serialization.boolean(),
    isResetting: core.serialization.boolean(),
    count: core.serialization.number(),
    name: core.serialization.string(),
    error: core.serialization.string().optional(),
    position: core.serialization.string().optional(),
});

export declare namespace EventConsumerDto {
    interface Raw {
        isStopped: boolean;
        isResetting: boolean;
        count: number;
        name: string;
        error?: string | null;
        position?: string | null;
    }
}
