/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const BulkUpdateAssetsJobDto: core.serialization.ObjectSchema<
    serializers.BulkUpdateAssetsJobDto.Raw,
    Squidex.BulkUpdateAssetsJobDto
> = core.serialization.object({
    id: core.serialization.string().optional(),
    type: core.serialization.lazy(async () => (await import("..")).BulkUpdateAssetType).optional(),
    parentId: core.serialization.string().optional(),
    fileName: core.serialization.string().optional(),
    slug: core.serialization.string().optional(),
    isProtected: core.serialization.boolean().optional(),
    tags: core.serialization.list(core.serialization.string()).optional(),
    metadata: core.serialization.record(core.serialization.string(), core.serialization.unknown()).optional(),
    permanent: core.serialization.boolean().optional(),
    expectedVersion: core.serialization.number().optional(),
});

export declare namespace BulkUpdateAssetsJobDto {
    interface Raw {
        id?: string | null;
        type?: serializers.BulkUpdateAssetType.Raw | null;
        parentId?: string | null;
        fileName?: string | null;
        slug?: string | null;
        isProtected?: boolean | null;
        tags?: string[] | null;
        metadata?: Record<string, unknown> | null;
        permanent?: boolean | null;
        expectedVersion?: number | null;
    }
}
