/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const PlanDto: core.serialization.ObjectSchema<serializers.PlanDto.Raw, Squidex.PlanDto> =
    core.serialization.object({
        id: core.serialization.string(),
        name: core.serialization.string(),
        costs: core.serialization.string(),
        confirmText: core.serialization.string().optional(),
        yearlyConfirmText: core.serialization.string().optional(),
        yearlyCosts: core.serialization.string().optional(),
        yearlyId: core.serialization.string().optional(),
        maxApiBytes: core.serialization.number(),
        maxApiCalls: core.serialization.number(),
        maxAssetSize: core.serialization.number(),
        maxContributors: core.serialization.number(),
    });

export declare namespace PlanDto {
    interface Raw {
        id: string;
        name: string;
        costs: string;
        confirmText?: string | null;
        yearlyConfirmText?: string | null;
        yearlyCosts?: string | null;
        yearlyId?: string | null;
        maxApiBytes: number;
        maxApiCalls: number;
        maxAssetSize: number;
        maxContributors: number;
    }
}
