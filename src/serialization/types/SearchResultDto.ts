/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const SearchResultDto: core.serialization.ObjectSchema<
    serializers.SearchResultDto.Raw,
    Squidex.SearchResultDto
> = core.serialization.object({
    name: core.serialization.string().optional(),
    type: core.serialization.lazy(async () => (await import("..")).SearchResultType).optional(),
    label: core.serialization.string().optional(),
});

export declare namespace SearchResultDto {
    interface Raw {
        name?: string | null;
        type?: serializers.SearchResultType.Raw | null;
        label?: string | null;
    }
}
