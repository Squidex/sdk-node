/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const TagsFieldPropertiesDto: core.serialization.ObjectSchema<
    serializers.TagsFieldPropertiesDto.Raw,
    Squidex.TagsFieldPropertiesDto
> = core.serialization.object({
    defaultValues: core.serialization
        .lazy(async () => (await import("..")).LocalizedValueOfReadonlyListOfString)
        .optional(),
    defaultValue: core.serialization.list(core.serialization.string()).optional(),
    minItems: core.serialization.number().optional(),
    maxItems: core.serialization.number().optional(),
    allowedValues: core.serialization.list(core.serialization.string()).optional(),
    createEnum: core.serialization.boolean(),
    editor: core.serialization.lazy(async () => (await import("..")).TagsFieldEditor),
});

export declare namespace TagsFieldPropertiesDto {
    interface Raw {
        defaultValues?: serializers.LocalizedValueOfReadonlyListOfString.Raw | null;
        defaultValue?: string[] | null;
        minItems?: number | null;
        maxItems?: number | null;
        allowedValues?: string[] | null;
        createEnum: boolean;
        editor: serializers.TagsFieldEditor.Raw;
    }
}
