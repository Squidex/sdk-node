/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "..";
import * as Squidex from "../../api";
import * as core from "../../core";

export const RuleElementPropertyDto: core.serialization.ObjectSchema<
    serializers.RuleElementPropertyDto.Raw,
    Squidex.RuleElementPropertyDto
> = core.serialization.object({
    editor: core.serialization.lazy(async () => (await import("..")).RuleFieldEditor),
    name: core.serialization.string(),
    display: core.serialization.string(),
    options: core.serialization.list(core.serialization.string()).optional(),
    description: core.serialization.string().optional(),
    isFormattable: core.serialization.boolean(),
    isRequired: core.serialization.boolean(),
});

export declare namespace RuleElementPropertyDto {
    interface Raw {
        editor: serializers.RuleFieldEditor.Raw;
        name: string;
        display: string;
        options?: string[] | null;
        description?: string | null;
        isFormattable: boolean;
        isRequired: boolean;
    }
}
