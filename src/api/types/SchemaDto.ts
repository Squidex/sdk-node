/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Squidex from "..";

export interface SchemaDto {
    /** The ID of the schema. */
    id?: string;
    /** The user that has created the schema. */
    createdBy?: string;
    /** The user that has updated the schema. */
    lastModifiedBy?: string;
    /** The name of the schema. Unique within the app. */
    name?: string;
    type?: Squidex.SchemaType;
    /** The name of the category. */
    category?: string;
    properties?: Squidex.SchemaPropertiesDto;
    /** Indicates if the schema is a singleton. */
    isSingleton?: boolean;
    /** Indicates if the schema is published. */
    isPublished?: boolean;
    /** The date and time when the schema has been created. */
    created?: string;
    /** The date and time when the schema has been modified last. */
    lastModified?: string;
    /** The version of the schema. */
    version?: number;
    scripts?: Squidex.SchemaScriptsDto;
    /** The preview Urls. */
    previewUrls?: Record<string, string | undefined>;
    /** The name of fields that are used in content lists. */
    fieldsInLists?: string[];
    /** The name of fields that are used in content references. */
    fieldsInReferences?: string[];
    /** The field rules. */
    fieldRules?: Squidex.FieldRuleDto[];
    /** The list of fields. */
    fields?: Squidex.FieldDto[];
}
